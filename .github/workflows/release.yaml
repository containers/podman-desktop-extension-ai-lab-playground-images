#
# Copyright (C) 2024 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
      branch:
        description: 'Branch to use for the release'
        required: true
        default: main
env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:

  tag:
    name: Tagging
    runs-on: ubuntu-24.04
    outputs:
      githubTag: ${{ steps.TAG_UTIL.outputs.githubTag}}
      imageVersion: ${{ steps.TAG_UTIL.outputs.imageVersion}}
      imageVersionShort: ${{ steps.TAG_UTIL.outputs.imageVersionShort}}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Generate tag utilities
        id: TAG_UTIL
        run: |
            TAG_PATTERN=${{ github.event.inputs.version }}
            echo "githubTag=v$TAG_PATTERN" >> ${GITHUB_OUTPUT}
            echo "imageVersion=$TAG_PATTERN" >> ${GITHUB_OUTPUT}
            echo "imageVersionShort=${TAG_PATTERN%.*}" >> ${GITHUB_OUTPUT}

      - name: tag
        run: |
          git config --local user.name ${{ github.actor }}

          echo "Tagging with ${{ steps.TAG_UTIL.outputs.githubTag }}"
          git tag ${{ steps.TAG_UTIL.outputs.githubTag }}
          git push origin ${{ steps.TAG_UTIL.outputs.githubTag }}    

  build:
    name: Build and Release ${{ matrix.build-image-name }}
    needs: tag
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - containerfile: "./chat/base/Containerfile"
            build-image-name: "ai-lab-playground-chat"
            archs: amd64, arm64
          - containerfile: "./chat/vulkan/amd64/Containerfile"
            build-image-name: "ai-lab-playground-chat-vulkan"
            archs: amd64
          - containerfile: "./chat/vulkan/arm64/Containerfile"
            build-image-name: "ai-lab-playground-chat-vulkan"
            archs: arm64
          - containerfile: "./chat/cuda/amd64/Containerfile"
            build-image-name: "ai-lab-playground-chat-cuda"
            archs: amd64
          - containerfile: "./chat/intel/amd64/Containerfile"
            build-image-name: "ai-lab-playground-chat-intel"
            archs: amd64
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.tag.outputs.githubTag }}
      
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Clone llama-cpp-python
        run: |
          git config --global user.email "podman-deskop@redhat.com"
          git config --global user.name "Podman Desktop team"
          cd chat
          ./setup.sh

      - name: Build Playground Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ matrix.build-image-name }}
          tags: latest ${{ needs.tag.outputs.imageVersion }} ${{ needs.tag.outputs.imageVersionShort }}
          labels: io.podman.ai-lab.version=${{ needs.tag.outputs.imageVersion }}
          containerfiles: |
            ${{ matrix.containerfile }}
          context: ./chat
          oci: true
          archs: ${{ matrix.archs }}

      - name: Login to ghcr.io
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push To ghcr.io
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}/podman-desktop-extension-ai-lab-playground-images
          
  release:
    needs: [tag, build]
    name: Release
    runs-on: ubuntu-24.04
    steps:
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ needs.tag.outputs.githubTag }}
          name: ${{ needs.tag.outputs.githubTag }}
   
